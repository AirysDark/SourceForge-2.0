name: Build OS Image (64-bit)

on:
  workflow_dispatch:
    inputs:
      model:
        description: 'Target Raspberry Pi model (arm64 only)'
        required: true
        default: 'pi4'
        type: choice
        options: [pi3, pi4, pi5]
      variant:
        description: 'Image variant'
        required: true
        default: 'lite'
        type: choice
        options: [lite, full]
      no_gpg:
        description: 'Set true to bypass GPG (fix flaky mirrors)'
        required: true
        default: 'false'
        type: choice
        options: [false, true]
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Normalize line endings & exec bit
        run: |
          sudo apt-get update && sudo apt-get install -y dos2unix
          dos2unix scripts/build-pigen.sh || true
          chmod +x scripts/build-pigen.sh

      - name: Install host deps
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static kpartx xz-utils dosfstools git

      - name: Build 64-bit image with pi-gen (Docker)
        shell: bash
        run: |
          MODEL="${{ inputs.model || 'pi4' }}"
          VARIANT="${{ inputs.variant || 'lite' }}"
          NO_GPG="${{ inputs.no_gpg || 'false' }}"
          bash ./scripts/build-pigen.sh --model "$MODEL" --variant "$VARIANT" --outdir dist --no-gpg "$NO_GPG"

      - name: Checksums
        run: (cd dist && sha256sum * > checksums.txt)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sf20-os-image
          path: dist/*

      - name: Publish GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}